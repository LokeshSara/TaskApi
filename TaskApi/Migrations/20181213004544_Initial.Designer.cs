// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TaskApi.Entity;

namespace TaskApi.Migrations
{
    [DbContext(typeof(TaskDBContext))]
    [Migration("20181213004544_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskApi.Entity.ParentTask", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ParentTaskDesc");

                    b.HasKey("ParentId");

                    b.ToTable("ParentTask");
                });

            modelBuilder.Entity("TaskApi.Entity.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("ParentId");

                    b.Property<int>("Priority");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("TaskDesc");

                    b.HasKey("TaskId");

                    b.HasIndex("ParentId")
                        .IsUnique();

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskApi.Entity.Task", b =>
                {
                    b.HasOne("TaskApi.Entity.ParentTask")
                        .WithOne("Tasks")
                        .HasForeignKey("TaskApi.Entity.Task", "ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
